{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "DenyHighRiskAPIs",
            "Resource": "*",
            "Effect": "Deny",
            "Action": [
                "account:DisableRegion",
                "account:EnableRegion",
                "aws-portal:ModifyAccount",
                "aws-portal:ModifyBilling",
                "aws-portal:ModifyPaymentMethods",
                "cloudtrail:DeleteTrail",
                "cloudtrail:StopLogging",
                "cloudtrail:UpdateTrail",
                "config:Delete*",
                "config:Stop*",
                "directconnect:*",
                "ec2:CreateDefault*",
                "ec2:*DefaultCreditSpecification",
                "ec2:*NatGateway",
                "ec2:A*Gateway*",
                "ec2:A*ReservedInstances*",
                "ec2:A*Subnet*",
                "ec2:A*Vpc*",
                "ec2:A*Vpn*",
                "ec2:AcceptTransitGatewayVpcAttachment",
                "ec2:AcceptVpcPeeringConnection",
                "ec2:AdvertiseByoipCidr",
                "ec2:AssociateDhcpOptions",
                "ec2:AssociateTransitGatewayRouteTable",
                "ec2:AssociateTransitGatewayRouteTable",
                "ec2:AttachClassicLinkVpc",
                "ec2:AttachEgressOnlyInternetGateway",
                "ec2:AttachInternetGateway",
                "ec2:C*Gateway*",
                "ec2:C*ReservedInstances*",
                "ec2:C*Subnet*",
                "ec2:C*Vpn*",
                "ec2:CreateClientVpnRoute",
                "ec2:CreateDefaultVpc",
                "ec2:CreateDhcpOptions",
                "ec2:CreateFlowLogs",
                "ec2:CreateInternetGateway",
                "ec2:CreateLocalGatewayRoute",
                "ec2:CreateLocalGatewayRouteTableVpcAssociation",
                "ec2:CreateTransitGateway*",
                "ec2:CreateTransitGatewayRoute",
                "ec2:CreateTransitGatewayRouteTable",
                "ec2:CreateVpc",
                "ec2:CreateVpcEndpointConnectionNotification",
                "ec2:CreateVpcEndpointServiceConfiguration",
                "ec2:CreateVpcPeeringConnection",
                "ec2:CreateVpnConnectionRoute",
                "ec2:Del*Gateway*",
                "ec2:Del*Subnet*",
                "ec2:Del*Vpn*",
                "ec2:DeleteClientVpnRoute",
                "ec2:DeleteDefaultVpc",
                "ec2:DeleteDhcpOptions",
                "ec2:DeleteFlowLogs",
                "ec2:DeleteLocalGatewayRoute",
                "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
                "ec2:DeleteTransitGateway*",
                "ec2:DeleteTransitGatewayRoute",
                "ec2:DeleteTransitGatewayRouteTable",
                "ec2:DeleteVpc",
                "ec2:DeleteVpcEndpointConnectionNotification",
                "ec2:DeleteVpcEndpointServiceConfiguration",
                "ec2:DeleteVpcPeeringConnection",
                "ec2:DeleteVpnConnectionRoute",
                "ec2:DeprovisionByoipCidr",
                "ec2:Dereg*TransitGateway*",
                "ec2:DescribeClientVpn*",
                "ec2:Det*Gateway*",
                "ec2:Det*Vpn*",
                "ec2:DetachClassicLinkVpc",
                "ec2:Dis*TransitGateway*",
                "ec2:Dis*Vpc*",
                "ec2:Dis*Vpn*",
                "ec2:DisableTransitGatewayRouteTablePropagation",
                "ec2:DisableVgwRoutePropagation",
                "ec2:DisableVpcClassicLink",
                "ec2:DisableVpcClassicLinkDnsSupport",
                "ec2:DisassociateSubnetCidrBlock",
                "ec2:DisassociateTransitGatewayRouteTable",
                "ec2:EnableTransitGatewayRouteTablePropagation",
                "ec2:EnableTransitGatewayRouteTablePropagation",
                "ec2:EnableVgwRoutePropagation",
                "ec2:EnableVpcClassicLink",
                "ec2:EnableVpcClassicLinkDnsSupport",
                "ec2:ExportClientVpn*",
                "ec2:GetTransitGatewayRouteTableAssociations",
                "ec2:GetTransitGatewayRouteTablePropagations",
                "ec2:ImportClientVpnClientCertificateRevocationList",
                "ec2:M*ReservedInstances*",
                "ec2:ModifyTransitGatewayVpcAttachment",
                "ec2:ModifyVpcEndpointConnectionNotification",
                "ec2:ModifyVpcEndpointServiceConfiguration",
                "ec2:ModifyVpcEndpointServicePermissions",
                "ec2:ModifyVpcPeeringConnectionOptions",
                "ec2:ModifyVpcTenancy",
                "ec2:MoveAddressToVpc",
                "ec2:M*Vpn*",
                "ec2:ModifyTrafficMirrorFilterNetworkServices",
                "ec2:ModifyTrafficMirrorFilterRule",
                "ec2:ModifyTrafficMirrorSession",
                "ec2:ModifyTransitGateway*",
                "ec2:P*ReservedInstances*",
                "ec2:ProvisionByoipCidr",
                "ec2:Purchase*",
                "ec2:R*Vpc*",
                "ec2:RejectTransitGatewayVpcAttachment",
                "ec2:ReplaceTransitGatewayRoute",
                "ec2:ReplaceTransitGatewayRoute",
                "ec2:RestoreAddressToClassic",
                "ec2:RevokeClientVpnIngress",
                "ec2:TerminateClientVpnConnections",
                "ec2:WithdrawByoipCidr",
                "elasticache:PurchaseReservedCacheNodesOffering",
                "emr:PutBlockPublicAccessConfiguration",
                "guardduty:Delete*",
                "guardduty:DisassociateFromMasterAccount",
                "guardduty:DisassociateMembers",
                "guardduty:StopMonitoringMembers",
                "ram:A*",
                "ram:C*",
                "ram:D*",
                "ram:E*",
                "ram:R*",
                "ram:U*",
                "rds:PurchaseReservedDBInstancesOffering",
                "redshift:AcceptReservedNodeExchange",
                "redshift:PurchaseReservedNodeOffering",
                "securityhub:Dis*",
                "sso-directory:*"
            ]
        },
        {
            "Sid": "DenyHighRiskServiceEndpoints",
            "Action": [
                "ec2:CreateVpcEndpoint"
            ],
            "Effect": "Deny",
            "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*",
            "Condition": {
                "StringNotEquals": {
                    "ec2:VpceServiceOwner": [
                        "amazon",
                        "xxxx20217"
                    ]
                }
            }
        },
        {
            "Sid": "DenySensitiveIAMActions",
            "Resource": "*",
            "Effect": "Deny",
            "Action": [
                "iam:*AccountPassword*",
                "iam:*CredentialReport",
                "iam:DeleteGroup",
                "iam:UpdateGroup",
                "iam:CreateGroup",
                "iam:AddUserToGroup",
                "iam:RemoveUserFromGroup",
                "iam:*LoginProfile",
                "iam:*MFADevice",
                "iam:*SAMLProvider",
                "iam:*SSHPublicKey",
                "iam:AddUser*",
                "iam:AttachUserPolicy",
                "iam:CreateUser",
                "iam:DeleteAccountAlias",
                "iam:*RolePermissionsBoundary",
                "iam:DeleteSigningCertificate",
                "iam:DeleteUser*",
                "iam:DetachUser*",
                "iam:PutUser*",
                "iam:RemoveUser*",
                "iam:TagUser",
                "iam:UntagUser",
                "iam:UpdateSigningCertificate",
                "iam:UpdateUser"
            ]
        },
        {
            "Sid": "DenyLogTampering",
            "Effect": "Deny",
            "Action": [
                "logs:DeleteLogGroup",
                "logs:DeleteLogStream",
                "logs:DeleteRetentionPolicy",
                "logs:PutDestination"
            ],
            "Resource": [
                "arn:aws:logs:*:*:log-group:/aws/ec2/*",
                "arn:aws:logs:*:*:log-group:*accesslogs*",
                "arn:aws:logs:*:*:log-group:cloudtrail-logs*",
                "arn:aws:logs:*:*:vpc-flowlogs*",
                "arn:aws:logs:*:*:waf-accesslogs*"
            ]
        },
        {
            "Sid": "DenyNonApprovedRegions",
            "Effect": "Deny",
            "NotAction": [
                "chatbot:*",
                "iam:*"
            ],
            "Resource": "*",
            "Condition": {
                "StringNotEquals": {
                    "aws:RequestedRegion": [
                        "us-east-1",
                        "us-west-2",
                        "us-gov-west-1",
                        "us-gov-east-1"
                    ]
                }
            }
        }
    ]
}
